sc-hacks is a library for SuperCollider which supports live-coding and application design.

Use is made of the sample bank and buffer loading code of SuperDirt from the [[https://github.com/tidalcycles/Tidal][tidalcycles]] repository by [[http://slab.org][Alex McLean]]. 

This library reviews the techniques developed previous libraries for SuperCollider [[https://github.com/iani/tiny-sc][tiny-sc]] and [[https://github.com/iani/tiny-inc][tiny-inc]], and builds a cleaner, more consistent version.

Documentation on the new library is available here: http://iani.github.io/sc-hacks-doc/.

Test 2.

* IDE Fantasy user manual

** Locations

When starting =IDE_Fantasy= you must always specify the name of location where you are running, because that is how the system knows which data to send to the other locations.  The name of the location is Symbol.

For March 2019, there are three locations:

- =\athens=
- =\corfu=
- =\stanford=

The symbol =\location= below must be one of the three symbols above, depending on where the SuperCollider program is actually running. 

** Starting IDE Fantasy
*** 2 options for starting: locally and networked
 There are two ways to start IDE Fantasy: 

(1) Standalone : In this mode, SC does not connect to hamachi, and no data are sent to or received from remote locations.  

#+BEGIN_SRC sclang

#+END_SRC

** Start IDE Fantasy without connecting

 #+BEGIN_SRC sclang
 IDE_Fantasy start: \location;
 #+END_SRC

This sets remote clients to an empty array and does not poll hamachi.
Data received locally are not forwarded to any remote locations.

** Start IDE Fantasy and connect to remote locations

 #+BEGIN_SRC sclang
 IDE_Fantasy start: \location;
 #+END_SRC


This sets remote clients to an empty array and poll hamachi.
Data received locally are forwarded to any remote locations found on hamachi.

** Manually connect or disconnect remote locations

*** Poll hamachi to find remote locations
  #+BEGIN_SRC sclang
  IDE_Fantasy.connectHamachi;
  #+END_SRC

Run  =hamachi list= as unix command and set remote names and ips of connected locations by parsing the output of that command.
If IDE_Fantasy is running (if OSC functions are active), then osc data received from local sensors are forwarded to all connected locations.

*** Clear remote clients and stop sending to remote locations
  #+BEGIN_SRC sclang
  IDE_Fantasy.clearHamachi;
  #+END_SRC

 Set remote names and IPs to empty array. IDE_Fantasy stops sending to remote locations.
